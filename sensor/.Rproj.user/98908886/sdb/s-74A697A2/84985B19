{
    "contents" : "library(stringr)\nlibrary(ggplot2)\nlibrary(gridExtra)\n\n# Load cleaned data -------------------------------------------------------\nsource(\"Data_Cleanning.R\")\nhead(values)\nhead(locations)\n\n# Data processing ---------------------------------------------------------\n\n# Store hours, in local time\nvalues$hours = (as.integer(str_extract(values$result_time,\"[^0-9-]+[0-9]+\"))-9) %% 24\nvalues$Portion_day = cut(values$hours, breaks = c(0,6,12,18,24),right=F)\nvalues$Portion_day_bis = cut(values$hours, breaks = c(0,4,8,12,16,20,24),right=F)\n\n\n# Merge data sets\nmerged_data = merge(values,locations,by.y = \"ID\", by.x = \"nodeid\")\nhead(merged_data)\n\n\n# Humidity/Temperature ----------------------------------------------------\n\nplot(values$humidity,values$humid_adj,\n     main = \"Effect of the adjustment of the humidity\",\n     ylab = \"Adjusted humidity ( %RH )\",\n     xlab = \"Relative humidity ( %RH )\",\n     cex = .1)\n\nggplot(values,aes(x = humidity,y = humid_temp)) + \n  scale_colour_gradient2(low = \"navyblue\", \n                         mid = \"orange\", \n                         high = \"navyblue\", \n                         midpoint = 12) + \n  geom_point(aes(colour = hours),alpha = 4/10,size=.5) +\n  ggtitle (\"Humidity vs Temperature\") +\n  xlab(\"Humidity ( %RH )\") +  ylab (\"Temperature ( ºC )\")\n\n\n\n\n\n# Temperature/Height ------------------------------------------------------\n\n\nbottom = merged_data$Height < 40\ntop =    merged_data$Height > 65\nPosition = rep(NA,length(merged_data$Height))\nPosition[bottom] = \"Bottom\"\nPosition[top] = \"Top\"\nPosition = as.factor(Position)\ndf_temp_height = data.frame(Position=Position,\n                            Temperature=merged_data$humid_temp,\n                            hamatop=merged_data$hamatop,\n                            Portion_day = merged_data$Portion_day,\n                            Portion_day_bis = merged_data$Portion_day_bis,\n                            hours=merged_data$hours)\ndf_temp_height = na.omit(df_temp_height)\n\nboxes = function(x) {\n  r = quantile(x, probs = c(0.10, 0.25, 0.5, 0.75, 0.90))\n  names(r) = c(\"ymin\", \"lower\", \"middle\", \"upper\", \"ymax\")\n  r\n}\n\ndodge <- position_dodge(width = 0.4)\nggplot(data = df_temp_height, aes(x = as.factor(Portion_day_bis), y = Temperature, fill = Position)) +\n  geom_violin(position = dodge)+\n  geom_boxplot(width=.2, outlier.colour=NA, position = dodge) +\n  scale_fill_manual(values=c(\"seagreen4\",\"palegreen3\"))+\n  ggtitle (\"Difference of temperature between the top and the bottom of the tree in a typical day\") +\n  xlab(\"Time Intervals ( h )\") +  ylab (\"Temperature ( °C )\") \n  \n\n# Combined plots ----------------------------------------------------------\n\ninterquartile <- function(x){\n  out <- quantile(x, probs = c(0.25, 0.5, 0.75))\n  names(out) <- c(\"ymin\", \"y\", \"ymax\")\n  out\n}\n\np1 = ggplot(df_temp_height, aes(x = as.factor(Portion_day_bis), y = Temperature, fill=Position)) +\n  geom_boxplot(width=.6, position = position_dodge(.6),show.legend=F) +\n  xlab(\"Time Intervals ( h )\") +  ylab (\"Temperature ( °C )\")+\n  ggtitle (\"Distribution of the temperature per 4 hours tranches\")\n\np2 = ggplot(df_temp_height, aes(x=hours, y=Temperature, col = Position, group = Position))+\n  stat_summary(fun.data = \"interquartile\", geom = \"errorbar\", width=0.5)+\n  stat_summary(fun.y = 'median', geom='line', lwd=1.5)+\n  xlab(\"Time ( h )\") +\n  ggtitle (\"Distribution of the temperature per hour\")+\n  theme(axis.title.y = element_blank()) \n\nlimits <- c(5, 35)\nbreaks <- seq(limits[1], limits[2], by=5)\n\n# assign common axis to both plots\np1.common.y <- p1 + coord_cartesian(ylim=limits) \np2.common.y <- p2 + coord_cartesian(ylim=limits) \n\n# copy the plot height from p1 to p2\np2.common.y$heights <- p1.common.y$heights\ngrid.arrange(p1.common.y,p2.common.y,ncol=2,widths=c(1,1))\n\n\n# Orientation -------------------------------------------------------------\n\nor_data = merged_data\nhead(or_data)\nor_data$Direction = or_data$Direc\nor_data = or_data[or_data$Direc != \"NW\",]tt\nhead(or_data)\n\nggplot(or_data,aes(x = Direction,y = log(hamabot+1),fill=Direction) )+ \n  geom_violin(scale = \"width\")+\n  ggtitle (\"Photo-synthetically Active Radiation per Hour Intervals\") +\n  xlab(\"Orientation\") +  ylab (\"Incident PAR\")+\n  facet_wrap(~Portion_day_bis, ncol = 3)+\n  scale_fill_brewer(palette=\"Blues\")\n",
    "created" : 1457315646612.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1216797103",
    "id" : "84985B19",
    "lastKnownWriteTime" : 1457409023,
    "path" : "~/Documents/doutib-work/sensor/Data_Exploration.R",
    "project_path" : "Data_Exploration.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}